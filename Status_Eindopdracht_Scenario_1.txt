Eindopdracht, Scenario 1
De oorspronkelijke versie van JabberPoint heeft kan een presentatie wegschrijven naar een XML-bestand, en inlezen vanuit een XML-bestand.
We willen de mogelijkheden van JabberPoint op dit gebied uitbreiden: presentaties moeten in verschillende formaten bewaard kunnen worden.
Het is de bedoeling dat JabberPoint op basis van de extensie die de gebruiker voor een bestandsnaam geeft, beslist in welk formaat de
presentatie bewaard gaat worden. 
We vragen om twee mogelijkheden in te bouwen: inlezen en wegschrijven van en naar HTML-formaat, en inlezen en wegschrijven van en naar tekstformaat.

2 Aanwijzingen
Gebruik voor het opvragen van een bestandsnaam de Swing klasse JFileChooser. Het gebruik hiervan wordt beschreven in de Java Tutorial
http://java.sun.com/docs/books/tutorial/uiswing/components/filechooser.html (zie ook de link op de website).
Bedenk bij het uitwerken van dit scenario:
– Welke onderdelen hebben in feite geen kennis nodig van de specifieke klasse van een Accessor?
– Wat heeft het exporteren naar verschillende formaten gemeenschappelijk? Wat varieert er? Idem voor importeren.
– Stel zelf afspraken op over hoe je een presentatie in tekst en in HTML representeert.

3 Opdrachten: 
-- OPDRACHT 1
Bekijk wat je moet toevoegen of veranderen aan de ubiquitous language.
Neem in de appendix jullie oorspronkelijke ubiquitous language op.
In het verslag zelf neem je het deel op dat relevant is voor de extra feature.
Laat zien welke veranderingen of modificaties nodig waren (of juist niet).

-- OPDRACHT 2
Pas het domeinontwerp aan, zodat de extra feature er in is opgenomen.
Doe dat op zo’n manier dat het uiteindelijke ontwerp goed bestand is tegen toekomstige veranderingen 
(ook wanneer je daarvoor veel moet veranderen aan het oorspronkelijke ontwerp!)
Neem in de appendix het oorspronkelijke ontwerp op.
In het verslag zelf beschrijf je alles wat relevant is voor de extra feature.
Beschrijf daarin ook wat je moest veranderen aan het oorspronkelijke ontwerp (of juist niet). 
Beschrijf van wat je in je verslag opneemt elke abstracte klasse en elke interface in termen van verantwoordelijkheden.
Laat objectcreatie nog buiten beschouwing.

-- OPDRACHT 3
Pas de user interface en andere lagen aan voor de extra feature. Neem in
de appendix het oorspronkelijke ontwerp op.
Laat in het verslag zelf het deel zien dat relevant is voor de extra feature.
Laat zien wat de aanpassingen zijn, of hoe de extra feature al mogelijk was in het bestaande ontwerp.

-- OPDRACHT 4
Pas de objectcreatie aan de nieuwe feature aan.
Neem het oorspronkelijke ontwerp op in de appendix.
Neem in het verslag zelf alles op dat relevant is voor de extra feature, en laat zien wat je moest aanpassen (of juist niet).

-- OPDRACHT 5
Laat zien welke patterns jullie hebben gebruikt in het gehele ontwerp.
Neem van elk pattern op:
– De naam
– Een klassendiagram (voor elk voorkomen van het pattern)
– Een tabel met elke klasse en interface en de rol die het speelt (voor elk voorkomen van het pattern)
– De reden waarom jullie het pattern hebben gebruikt op die plek (voor elk voorkomen van het pattern).

-- OPDRACHT 6
Reflecteer individueel op:
• Hoe goed was het oorspronkelijke ontwerp voorbereid op het inpassen van de feature?
• Hoe is het ontwerp voorbereid op toekomstige veranderingen?
• Hoe is het bevallen om te beginnen met een ubiquitousen van daar uit te werken?
• Hoe is de manier van werken met het delen van resultaten bevallen?
• Hoe verliep de samenwerking in het team?

-- OPDRACHT 7
Lever een werkend programma in, met sourcecode (in de vorm van een
Eclipse project). 